{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","react_default","a","createElement","AppBar","position","Toolbar","Typography","variant","color","style","flex","Box","Grid","container","item","sm","DataGrid","columns","field","headerName","width","rows","id","col1","col2","autoHeight","components","GridToolbar","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"0QAuDeA,EA/CH,WA2BR,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAS,UACfJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,WAAlC,aAGAR,EAAAC,EAAAC,cAAA,OAAKO,MAAO,CAAEC,KAAM,eAGxBV,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,WAAS,GACbb,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACbf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAUC,QAlBN,CACd,CAAEC,MAAO,OAAQC,WAAY,WAAYC,MAAO,KAChD,CAAEF,MAAO,OAAQC,WAAY,WAAYC,MAAO,MAgBVC,KAxB3B,CACX,CAAEC,GAAI,EAAGC,KAAM,QAASC,KAAM,SAC9B,CAAEF,GAAI,EAAGC,KAAM,cAAeC,KAAM,cACpC,CAAEF,GAAI,EAAGC,KAAM,MAAOC,KAAM,eAqBsBC,YAAU,EAACC,WAAY,CAAErB,QAASsB,YCpCzEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,WAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDdY,IAASC,OACP1C,EAAAC,EAAAC,cAACF,EAAAC,EAAM0C,WAAP,KACE3C,EAAAC,EAAAC,cAAC0C,EAAD,OAEFC,SAASC,eAAe,SAM1BlB","file":"static/js/main.44dedc71.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\n// import QuickSearchToolbar from './SearchField';\nconst App = () => {\n  // const [searchText, setSearchText] = React.useState('');\n  // const requestSearch = (searchValue) => {\n  //   setSearchText(searchValue);\n  //   const searchRegex = new RegExp(escapeRegExp(searchValue), 'i');\n  //   const filteredRows = data.rows.filter((row) => {\n  //     return Object.keys(row).some((field) => {\n  //       return searchRegex.test(row[field].toString());\n  //     });\n  //   });\n  //   setRows(filteredRows);\n  // };\n\n  // React.useEffect(() => {\n  //   setRows(data.rows);\n  // }, [data.rows]);\n  const rows = [\n    { id: 1, col1: 'Hello', col2: 'World' },\n    { id: 2, col1: 'DataGridPro', col2: 'is Awesome' },\n    { id: 3, col1: 'MUI', col2: 'is Amazing' },\n  ];\n  \n  const columns = [\n    { field: 'col1', headerName: 'Column 1', width: 150 },\n    { field: 'col2', headerName: 'Column 2', width: 150 },\n  ];\n  \n    return (\n      <div>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"title\" color=\"inherit\">\n             BasicList\n          </Typography>\n            <div style={{ flex: '1 1 0px' }} />\n          </Toolbar>\n        </AppBar>\n        <Box>\n          <Grid container>\n            <Grid item sm={12}>\n              <DataGrid columns={columns} rows={rows} autoHeight components={{ Toolbar: GridToolbar}} />\n            </Grid>\n          </Grid>\n        </Box>\n      </div>\n    );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}